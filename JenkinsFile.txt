pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                script {
                    echo "Building the code using Maven."
                    // Add actual Maven build command here
                    // Example: sh 'mvn clean install'
                }
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                script {
                    echo "Running unit tests and integration tests using JUnit."
                    // Add actual test command here
                    // Example: sh 'mvn test'
                }
            }
        }

        stage('Code Analysis') {
            steps {
                script {
                    echo "Analyzing code quality using SonarQube."
                    // Add actual SonarQube analysis command here
                    // Example: sh 'mvn sonar:sonar'
                }
            }
        }

        stage('Security Scan') {
            steps {
                script {
                    echo "Performing security scan using OWASP Dependency-Check."
                    // Add actual security scan command here
                    // Example: sh 'dependency-check --project MyProject --scan .'
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                script {
                    echo "Deploying the application to staging server (AWS EC2)."
                    // Add actual deployment command here
                    // Example: sh 'aws deploy create-deployment --application-name MyApp --deployment-group-name MyStagingGroup --s3-location bucket=mybucket,key=myapp.zip'
                }
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                script {
                    echo "Running integration tests on the staging environment using Selenium."
                    // Add actual integration test command here
                    // Example: sh 'run-integration-tests.sh'
                }
            }
        }

        stage('Deploy to Production') {
            steps {
                script {
                    echo "Deploying the application to production server (AWS EC2)."
                    // Add actual deployment command here
                    // Example: sh 'aws deploy create-deployment --application-name MyApp --deployment-group-name MyProductionGroup --s3-location bucket=mybucket,key=myapp.zip'
                }
            }
        }
    }

    post {
        always {
            script {
                emailext to: "mankirtkharaud@gmail.com",
                    subject: "Jenkins Pipeline Status: ${currentBuild.currentResult}",
                    body: "The Jenkins pipeline has completed with the status: ${currentBuild.currentResult}. Please check the attached logs for details.",
                    attachLog: true
            }
        }
    }
}

